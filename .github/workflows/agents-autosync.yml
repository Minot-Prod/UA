name: Parlios - Agents AutoSync

"on":
  issues:
    types: [labeled]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  from_issue_to_pr:
    if: ${{ github.event_name == 'issues' && github.event.action == 'labeled' && github.event.label.name == 'agent:new' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Extract JSON from Issue body
        id: extract
        env:
          BODY: ${{ github.event.issue.body }}
        run: |
          printf "%s" "$BODY" | awk '/```json/{flag=1;next}/```/{flag=0}flag' > /tmp/agent.json || true
          if [ ! -s /tmp/agent.json ]; then
            printf "%s" "$BODY" > /tmp/agent.json || true
          fi
          if ! jq empty /tmp/agent.json 2>/dev/null; then
            echo "Issue body n'est pas un JSON valide. Mets un bloc ```json ... ```"
            exit 1
          fi

      - name: Create working branch
        id: br
        run: |
          BR="auto/agent-${{ github.event.issue.number }}-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH=$BR" >> $GITHUB_ENV
          git checkout -b "$BR"

      - name: Update module file
        run: |
          mkdir -p modules
          MOD="modules/WebCreationTeam.json"
          test -f "$MOD" || echo '{"agents":[]}' > "$MOD"
          if jq -e 'type=="array"' /tmp/agent.json >/dev/null; then
            jq --slurpfile new /tmp/agent.json '.agents += $new' "$MOD" > "$MOD.tmp"
          else
            jq --slurpfile new /tmp/agent.json '.agents += [$new[0]]' "$MOD" > "$MOD.tmp"
          fi
          mv "$MOD.tmp" "$MOD"

      - name: Commit & push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add modules/WebCreationTeam.json
          git commit -m "chore: add agent from issue #${{ github.event.issue.number }}"
          git push origin "$BRANCH"

      - name: Open PR
        id: open_pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `AutoSync: agent from issue #${context.payload.issue.number}`,
              head: process.env.BRANCH,
              base: 'main',
              body: `Auto-generated from issue #${context.payload.issue.number}.`
            });
            core.setOutput('pr_url', pr.data.html_url)

      - name: Log PR URL
        run: echo "PR ouverte: ${{ steps.open_pr.outputs.pr_url }}"
