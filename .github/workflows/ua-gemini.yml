name: UA → Gemini (AI Studio)

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Question à poser à Gemini"
        required: true
        default: "Donne 3 idées de posts Instagram pour Taslow (style concis)."
  issue_comment:
    types: [created]

jobs:
  ask-gemini:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/ask-gemini'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Déterminer le prompt
        id: prompt
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "value=${{ github.event.inputs.prompt }}" >> $GITHUB_OUTPUT
          else
            # Ex: commentaire "/ask-gemini Ton texte ici"
            RAW="${{ github.event.comment.body }}"
            PROMPT="${RAW#*/ask-gemini }"
            echo "value=${PROMPT}" >> $GITHUB_OUTPUT
          fi

      - name: Appel Gemini (curl)
        id: call
        env:
          GEMINI_API_KEY: ${{ AIzaSyDubMD3peGM1TrWD2hQ3IjHw2cO0Lp8MqI }}
          PROMPT: ${{ steps.prompt.outputs.value }}
        run: |
          set -e
          mkdir -p out
          # Endpoint courant Gemini "generateContent" (modèle flash rapide)
          URL="https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}"
          BODY=$(jq -n --arg text "$PROMPT" '{contents: [{parts: [{text: $text}]}]}')

          curl -sS -X POST "$URL" \
            -H "Content-Type: application/json" \
            -d "$BODY" > out/response.json

          # Extraire le texte (chemin standard des réponses Gemini)
          TEXT=$(jq -r '.candidates[0].content.parts[0].text // empty' out/response.json)
          if [ -z "$TEXT" ]; then
            echo "Aucune réponse textuelle trouvée. Inspecte out/response.json"
            cat out/response.json
            exit 1
          fi

          echo "$TEXT" > out/answer.txt
          echo "answer<<EOF" >> $GITHUB_OUTPUT
          echo "$TEXT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Publier l’artifact (réponse brute + parsed)
        uses: actions/upload-artifact@v4
        with:
          name: ua-gemini-response
          path: out/

      - name: Afficher la réponse dans les logs
        run: |
          echo "-------- Réponse Gemini --------"
          cat out/answer.txt
          echo "--------------------------------"

      - name: (Optionnel) Répondre en commentaire si trigger via issue/PR
        if: github.event_name == 'issue_comment'
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            **UA → Gemini**
            > Prompt : `${{ steps.prompt.outputs.value }}`

            **Réponse :**
            ```
            ${{ steps.call.outputs.answer }}
            ```
