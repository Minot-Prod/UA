# ============================
# Parlios TestPack (Neon UI) - PowerShell Builder
# ============================
$Root = "parlios-testpack-neon"
$Zip  = "Parlios_TestPack_Neon.zip"

if (Test-Path $Root) { Remove-Item $Root -Recurse -Force }
if (Test-Path $Zip)  { Remove-Item $Zip  -Force }

# Folders
$apps = @("messagecraft-pro","vision-marche","creator-hub","pricing-assistant","offer-builder","market-genius","site-preview-builder")
New-Item -ItemType Directory -Force -Path "$Root/assets/brand","$Root/styles","$Root/lib" | Out-Null
$apps | ForEach-Object { New-Item -ItemType Directory -Force -Path "$Root/apps/$_" | Out-Null }

function Write-Utf8($path, $content) {
  $dir = Split-Path $path
  if (-not (Test-Path $dir)) { New-Item -ItemType Directory -Force -Path $dir | Out-Null }
  $content | Out-File -FilePath $path -Encoding utf8 -Force
}

# --- Brand ---
$logo = @'
<svg xmlns="http://www.w3.org/2000/svg" width="180" height="44" viewBox="0 0 180 44" role="img" aria-label="Parlios">
  <defs><linearGradient id="g" x1="0" x2="1">
    <stop offset="0%" stop-color="#FF6B6B"/><stop offset="50%" stop-color="#9EE37D"/><stop offset="100%" stop-color="#7FD4FF"/>
  </linearGradient></defs>
  <rect x="1" y="1" width="178" height="42" rx="12" fill="none" stroke="url(#g)" stroke-width="1.6"/>
  <circle cx="24" cy="22" r="8" fill="url(#g)" />
  <text x="44" y="27" font-family="Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif"
        font-weight="800" font-size="18" fill="url(#g)">Parlios</text>
</svg>
'@
Write-Utf8 "$Root/assets/brand/parlios-logo.svg" $logo

# --- Styles (neon/glass) ---
$css = @'
:root{--bg:#07090F;--text:#F3F7FF;--muted:#B8C2D9;--border:rgba(255,255,255,.14);--g1:#FF6B6B;--g2:#7FD4FF}
*{box-sizing:border-box}html,body{height:100%}
body{margin:0;background:
  radial-gradient(1200px 800px at -10% -10%, rgba(255,107,107,.15), transparent 60%),
  radial-gradient(1200px 800px at 110% 110%, rgba(127,212,255,.15), transparent 60%),
  var(--bg);
  color:var(--text);font:15px/1.55 Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Arial}
.container{max-width:1160px;margin:0 auto;padding:22px}
header.brand{display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--border);padding:12px 0;margin-bottom:16px}
.brand .left{display:flex;align-items:center;gap:12px}
.badge{display:inline-flex;gap:8px;align-items:center;padding:6px 10px;border:1px solid var(--border);border-radius:999px;
  background:linear-gradient(180deg,rgba(255,255,255,.06),rgba(255,255,255,.02));color:var(--muted);font-size:12px}
.cards{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:16px;margin-top:16px}
.card{position:relative;background:linear-gradient(180deg,rgba(255,255,255,.06),rgba(255,255,255,.02));
  border:1px solid var(--border);border-radius:18px;padding:16px;box-shadow:0 10px 40px rgba(0,0,0,.35), inset 0 1px 0 rgba(255,255,255,.05)}
.card::before{content:"";position:absolute;inset:-1px;border-radius:18px;background:
  radial-gradient(80% 100% at 10% 10%, rgba(255,107,107,.18), transparent 45%),
  radial-gradient(80% 100% at 90% 90%, rgba(127,212,255,.18), transparent 45%);filter:blur(20px);opacity:.6;pointer-events:none}
label{display:block;margin:10px 0 6px;color:var(--muted)}
.grid-2{display:grid;grid-template-columns:1.1fr .9fr;gap:16px}
input,select,textarea,button{background:#0C141F;color:var(--text);border:1px solid var(--border);border-radius:14px;padding:10px 12px}
textarea{min-height:120px;resize:vertical;width:100%}
button.primary{background:linear-gradient(90deg,var(--g1),var(--g2));color:#06101A;font-weight:800;border:0}
button.ghost{background:rgba(255,255,255,.05)}
.output{white-space:pre-wrap;background:linear-gradient(180deg,rgba(255,255,255,.04),rgba(255,255,255,.02));
  border:1px dashed var(--border);border-radius:16px;padding:12px}
.hr{height:1px;background:linear-gradient(90deg,transparent,rgba(255,255,255,.18),transparent);border:0;margin:18px 0}
.toast{position:fixed;right:16px;bottom:16px;max-width:420px;background:#0C141F;border:1px solid var(--border);border-radius:12px;padding:12px;display:none}
.toast.show{display:block}
dialog.guide{max-width:780px;background:#0C141F;border:1px solid var(--border);border-radius:18px;padding:16px}
dialog.guide::backdrop{background:rgba(0,0,0,.6)}
'@
Write-Utf8 "$Root/styles/base.css" $css

# --- Libs ---
$exporters = @'
export function exportJSON(n,d){dl(n,new Blob([JSON.stringify(d,null,2)],{type:"application/json"}))}
export function exportMD(n,bs){dl(n,new Blob([bs.join("\n\n")],{type:"text/markdown"}))}
export function exportCSV(n,rows){const csv=rows.map(r=>r.map(c=>`"${String(c).replace(/"/g,'""')}"`).join(",")).join("\n");dl(n,new Blob([csv],{type:"text/csv"}))}
export function exportHTML(n,html){dl(n,new Blob([html],{type:"text/html"}))}
function dl(n,b){const a=document.createElement("a");a.href=URL.createObjectURL(b);a.download=n;a.click();setTimeout(()=>URL.revokeObjectURL(a.href),1e3)}
'@
Write-Utf8 "$Root/lib/exporters.js" $exporters

$mock = @'
function R(s){let x=Math.sin(s)*10000;return x-Math.floor(x)}
function pick(a,q){return a[Math.floor(q*a.length)%a.length]}
export function variants({seed,tone="pro",goal="generic",count=5}){
  const P={hooks:["Et si vous passiez au niveau supérieur ?","Prêt à gagner du temps dès aujourd’hui ?","Votre audience attend déjà la suite.","Transformez une idée en impact concret."],
    benefits:["Gain de temps x3","Expérience premium sans complexité","Plus de clarté, moins de friction","Résultats mesurables en quelques jours"],
    proofs:["Déjà adopté à Montréal et Paris","KPIs intégrés","A11y AA et performance élevées","Design system exportable"],
    ctas:{portfolio:["Voir mon portfolio","Découvrir mes projets","Explorer mes réalisations"],booking:["Réserver une séance","Prendre rendez-vous","Planifier un appel"],table:["Réserver une table","Voir le menu","Commander"],generic:["Commencer maintenant","Essayer la démo","Créer ma version"]}};
  const tones={friendly:["simple","fluide","clair","humain"],pro:["efficace","structuré","robuste","mesurable"],fun:["énergique","percutant","amusant","vif"],direct:["concret","rapide","net","précis"]};
  const T={portfolio:'{h} Découvrez un aperçu {a} de vos projets. {b}. {p}. {c} →',booking:'{h} Passez à l’action avec un parcours {a}. {b}. {p}. {c} →',table:'{h} Une expérience {a} pour vos clients. {b}. {p}. {c} →',generic:'{h} Une solution {a} alignée sur vos objectifs. {b}. {p}. {c} →'};
  const out=[], base=typeof seed==="number"?seed:Date.now();
  for(let i=0;i<count;i++){const s=base+i*777,adj=pick(tones[tone]||tones.pro,Math.abs(R(s))),h=pick(P.hooks,Math.abs(R(s+1))),b=pick(P.benefits,Math.abs(R(s+2))),pr=pick(P.proofs,Math.abs(R(s+3))),c=pick(P.ctas[goal]||P.ctas.generic,Math.abs(R(s+4)));
    out.push((T[goal]||T.generic).replace("{h}",h).replace("{a}",adj).replace("{b}",b).replace("{p}",pr).replace("{c}",c)+` (${tone})`)}
  return out;
}
'@
Write-Utf8 "$Root/lib/mock_ai.js" $mock

# --- Common snippets ---
$HEADER = '<header class="brand"><div class="left"><img src="../../assets/brand/parlios-logo.svg" width="120" height="30" alt="Parlios"/><span class="badge">Pack Testeurs</span></div><button id="openGuide" class="ghost">ℹ Exemple & mode d’emploi</button></header>'
$GUIDE   = '<dialog id="guide" class="guide"><h3>{title}</h3><p>{intro}</p><div class="card"><strong>Exemple rapide</strong><br/>{example}</div><div class="row"><button id="closeGuide" class="primary">J’ai compris</button></div></dialog><script>const g=document.getElementById("guide");document.getElementById("openGuide")?.addEventListener("click",()=>g.showModal());document.getElementById("closeGuide")?.addEventListener("click",()=>g.close());</script>'
$TOAST   = '<div id="toast" class="toast" role="status" aria-live="polite"><strong id="tTitle">Info</strong><div id="tMsg" class="help"></div></div><script>function toast(a,b){const t=document.getElementById("toast");document.getElementById("tTitle").textContent=a;document.getElementById("tMsg").textContent=b;t.classList.add("show");setTimeout(()=>t.classList.remove("show"),2000)}</script>'

function New-AppPage([string]$Title,[string]$Controls,[string]$ModuleJS,[string]$Intro,[string]$Example,[string]$Slug){
  $html = @"
<!doctype html><html lang="fr"><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>$Title — Parlios</title><link rel="stylesheet" href="../../styles/base.css"/>
<body><div class="container">
$HEADER
<h1>$Title</h1>
<div class="grid-2"><div class="card">$Controls</div><div class="card" id="right"></div></div>
<p><a href="../../index.html"><button class="ghost">← Retour au Hub</button></a></p>
</div>
$($GUIDE.Replace("{title}", $Title).Replace("{intro}", $Intro).Replace("{example}", $Example))
$TOAST
<script type="module">$ModuleJS</script>
</body></html>
"@
  Write-Utf8 "$Root/apps/$Slug/index.html" $html
}

# --- Hub ---
$today = Get-Date -Format "yyyy-MM-dd"
$hub = @"
<!doctype html><html lang="fr"><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Parlios — Pack Testeurs</title><link rel="stylesheet" href="./styles/base.css"/>
<body><div class="container">
<header class="brand"><div class="left"><img src="./assets/brand/parlios-logo.svg" width="120" height="30" alt="Parlios"/><span class="badge">Pack Testeurs</span></div><span class="badge">Version $today</span></header>
<h1>Boîte à outils Parlios</h1><p class="help">7 apps gratuites, offline — prêtes pour Netlify Drop</p>
<div class="cards">
  <div class="card"><h3>Parlios Message Pro</h3><p>5 variantes uniques. CSV/MD/JSON.</p><a href="./apps/messagecraft-pro/index.html"><button class="primary">Ouvrir</button></a></div>
  <div class="card"><h3>Parlios Vision Marché</h3><p>Insights + plan d’action. MD/JSON.</p><a href="./apps/vision-marche/index.html"><button class="primary">Ouvrir</button></a></div>
  <div class="card"><h3>Parlios Creator Hub</h3><p>Calendrier 1–4 semaines. CSV/JSON.</p><a href="./apps/creator-hub/index.html"><button class="primary">Ouvrir</button></a></div>
  <div class="card"><h3>Parlios Assistant Prix</h3><p>Prix + ROI. JSON.</p><a href="./apps/pricing-assistant/index.html"><button class="primary">Ouvrir</button></a></div>
  <div class="card"><h3>Parlios Constructeur d’Offres</h3><p>Offre complète. MD.</p><a href="./apps/offer-builder/index.html"><button class="primary">Ouvrir</button></a></div>
  <div class="card"><h3>Parlios Génie du Marché</h3><p>Idées multi-canaux. CSV.</p><a href="./apps/market-genius/index.html"><button class="primary">Ouvrir</button></a></div>
  <div class="card"><h3>Parlios Créateur de Site</h3><p>Preview + export HTML.</p><a href="./apps/site-preview-builder/index.html"><button class="primary">Ouvrir</button></a></div>
</div>
</div></body></html>
"@
Write-Utf8 "$Root/index.html" $hub

# --- Apps (contrôles + JS) ---
# Message Pro
$MSG_CTL = '<label>Objectif</label><select id="goal"><option value="generic">Générique</option><option value="portfolio">Voir un portfolio</option><option value="booking">Réserver une séance</option><option value="table">Réserver une table</option></select><label>Ton</label><select id="tone"><option>pro</option><option>friendly</option><option>fun</option><option>direct</option></select><label>Seed (optionnel)</label><input id="seed" type="number"/><div class="row"><button id="gen" class="primary">Générer 5 variantes</button><button id="csv" class="ghost">CSV</button><button id="md" class="ghost">MD</button><button id="json" class="ghost">JSON</button></div>'
$MSG_JS  = 'import {variants} from "../../lib/mock_ai.js";import {exportCSV,exportMD,exportJSON} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Variantes</label><div id=out class=output></div>";let last=[];gen.onclick=()=>{last=variants({seed:Number(seed.value)||Date.now(),tone:tone.value,goal:goal.value,count:5});out.innerHTML=last.map((v,i)=>`<p><strong>#${i+1}</strong> — ${v}</p>`).join("");toast("Génération","5 variantes prêtes")};csv.onclick=()=>last.length?exportCSV("parlios-message.csv",[["index","texte"]].concat(last.map((v,i)=>[i+1,v]))):toast("Export","Rien à exporter");md.onclick=()=>last.length?exportMD("parlios-message.md",last.map((v,i)=>`**Variante ${i+1}**\n\n${v}`)):toast("Export","Rien à exporter");json.onclick=()=>last.length?exportJSON("parlios-message.json",{variants:last}):toast("Export","Rien à exporter")'
New-AppPage "Parlios Message Pro" $MSG_CTL $MSG_JS "Générez 5 messages adaptés à votre objectif/ton en 100% offline." "Objectif: Réserver une séance • Ton: pro → Générer puis Export CSV." "messagecraft-pro"

# Vision Marché
$VM_CTL = '<label>Marché / Niche</label><input id="market"/><label>Audience / Persona</label><input id="persona"/><label>Période</label><select id="period"><option>30 jours</option><option>60 jours</option><option>90 jours</option></select><div class="row"><button id="run" class="primary">Analyser</button><button id="md" class="ghost">MD</button><button id="json" class="ghost">JSON</button></div>'
$VM_JS  = 'import {variants} from "../../lib/mock_ai.js";import {exportMD,exportJSON} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Insights</label><div id=ins class=output></div><div class=hr></div><label>Plan d’action</label><div id=plan class=output></div>";let last=null;run.onclick=()=>{const m=market.value||"Marché local",p=persona.value||"Audience cible",period=period.value,s=Date.now();const insV=variants({seed:s,tone:"pro",count:3});const acts=variants({seed:s+42,tone:"friendly",count:5});ins.textContent=`Insights (${m} → ${p})\n\n`+insV.map((v,i)=>`• Insight ${i+1}: ${v}`).join("\n");plan.textContent=`Plan d’action (${period})\n\n`+acts.map((v,i)=>`- Action ${i+1}: ${v}`).join("\n");last={market:m,persona:p,period,insights:insV,actions:acts};toast("Analyse prête","Insights + plan OK")};json.onclick=()=>last?exportJSON("parlios-vision-marche.json",last):toast("Export","Rien à exporter");md.onclick=()=>last?exportMD("parlios-vision-marche.md",[`# Vision Marché\n**Marché**: ${last.market}\n**Persona**: ${last.persona}\n**Période**: ${last.period}`,`## Insights\n- ${last.insights.join("\n- ")}`,`## Plan d’action\n- ${last.actions.join("\n- ")}`]):toast("Export","Rien à exporter")'
New-AppPage "Parlios Vision Marché" $VM_CTL $VM_JS "Obtenez des insights synthétiques + plan d’action court terme." "Marché: Photographes mariage • Persona: Fiancés 25–35 → Analyser puis Export MD." "vision-marche"

# Creator Hub
$CH_CTL = '<label>Thème / Campagne</label><input id="theme"/><label>Fenêtre</label><select id="window"><option>1 semaine</option><option selected>2 semaines</option><option>3 semaines</option><option>4 semaines</option></select><label>Médias disponibles</label><input id="media" type="number" value="10" min="0"/><div class="row"><button id="go" class="primary">Générer</button><button id="csv" class="ghost">CSV</button><button id="json" class="ghost">JSON</button></div>'
$CH_JS  = 'import {variants} from "../../lib/mock_ai.js";import {exportCSV,exportJSON} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Calendrier</label><div id=cal class=output></div><div class=hr></div><label>Alertes</label><div id=alert class=output></div>";let last=null;go.onclick=()=>{const weeks=Number(window.value.split(" ")[0]);const posts=weeks*3;const mediaN=Number(media.value||0);const ideas=variants({seed:Date.now(),tone:"fun",count:posts});cal.textContent=ideas.map((x,i)=>`J${i+1}: ${x}`).join("\n");alert.textContent=posts-mediaN>0?`⚠️ Manque ${posts-mediaN} visuels`:`✅ Médias OK pour ${posts} posts`;last={theme:theme.value||"Campagne Parlios",weeks,media:mediaN,posts,ideas};toast("Calendrier prêt",posts+" posts")};csv.onclick=()=>last?exportCSV("parlios-creator-hub.csv",[["Jour","Idée"]].concat(last.ideas.map((x,i)=>[i+1,x]))):toast("Export","Rien à exporter");json.onclick=()=>last?exportJSON("parlios-creator-hub.json",last):toast("Export","Rien à exporter")'
New-AppPage "Parlios Creator Hub" $CH_CTL $CH_JS "Planifiez 1–4 semaines de contenus et anticipez vos besoins médias." "Fenêtre: 2 semaines • Médias: 6 → Générer puis Export CSV." "creator-hub"

# Pricing Assistant
$PA_CTL = '<label>Coût (CAD)</label><input id="cost" type="number" value="50"/><label>Valeur perçue (1–10)</label><input id="value" type="number" value="7" min="1" max="10"/><label>Positionnement (1=entrée, 10=premium)</label><input id="pos" type="number" value="6" min="1" max="10"/><div class="row"><button id="calc" class="primary">Calculer</button><button id="json" class="ghost">JSON</button></div>'
$PA_JS  = 'import {exportJSON} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Résultats</label><div id=out class=output></div>";let last=null;function clamp(n,a,b){return Math.min(b,Math.max(a,n))}function fmt(x){return new Intl.NumberFormat("fr-CA",{maximumFractionDigits:2}).format(x)}calc.onclick=()=>{const c=Math.max(0,Number(cost.value||0));const v=clamp(Number(value.value||5),1,10);const p=clamp(Number(pos.value||5),1,10);const margin=0.2+(v-5)*0.03+(p-5)*0.04;const price=c*(1+Math.max(0.1,Math.min(1.5,margin)));const roi=(price-c)/Math.max(1,c);const seg=price<c*1.2?"entrée":price<c*2?"milieu":"premium";out.textContent=`Prix recommandé: ${fmt(price)} CAD (segment: ${seg})\nMarge estimée: ${(margin*100).toFixed(1)} %\nROI approximatif: ${(roi*100).toFixed(1)} %`;last={cost:c,value:v,position:p,price,margin,roi,segment:seg};toast("Calcul terminé","Prix prêt")};json.onclick=()=>last?exportJSON("parlios-pricing.json",last):toast("Export","Rien à exporter")'
New-AppPage "Parlios Assistant Prix" $PA_CTL $PA_JS "Calculez un prix recommandé et un ROI approximatif." "Coût: 50 • Valeur: 7 • Positionnement: 6 → Calculer puis Export JSON." "pricing-assistant"

# Offer Builder
$OB_CTL = '<label>Produit / Service</label><input id="product"/><label>Audience</label><input id="audience"/><label>Ton</label><select id="tone"><option>pro</option><option>friendly</option><option>fun</option><option>direct</option></select><div class="row"><button id="build" class="primary">Construire l’offre</button><button id="md" class="ghost">MD</button></div>'
$OB_JS  = 'import {variants} from "../../lib/mock_ai.js";import {exportMD} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Offre</label><div id=out class=output></div>";let last=null;build.onclick=()=>{const seed=Date.now(),toneVal=tone.value;const product=product.value||"Offre Parlios";const audience=audience.value||"Audience locale";const title=variants({seed,tone:toneVal,count:1})[0];const benefits=variants({seed:seed+1,tone:toneVal,count:3});const proofs=variants({seed:seed+2,tone:toneVal,count:2});const objections=["Trop cher ? → garantie satisfait ou remboursé 14j","Pas le temps ? → plan en 3 étapes, < 3h setup"];const cta=variants({seed:seed+3,tone:toneVal,count:1})[0];out.innerHTML=`<strong>Titre:</strong> ${title}<br><br><strong>Promesse:</strong> ${product} pour ${audience}.<br><br><strong>Bénéfices:</strong><br>- ${benefits.join("<br>- ")}<br><br><strong>Preuves:</strong><br>- ${proofs.join("<br>- ")}<br><br><strong>Objections & réponses:</strong><br>- ${objections.join("<br>- ")}<br><br><strong>CTA:</strong> ${cta}`;last={product,audience,tone:toneVal,title,benefits,proofs,objections,cta};toast("Offre prête","Export MD possible")};md.onclick=()=>last?exportMD("parlios-offer.md",[`# Offre\n**Produit**: ${last.product}\n**Audience**: ${last.audience}\n**Ton**: ${last.tone}`,`## Titre\n${last.title}`,`## Bénéfices\n- ${last.benefits.join("\n- ")}`,`## Preuves\n- ${last.proofs.join("\n- ")}`,`## Objections\n- ${last.objections.join("\n- ")}`,`## CTA\n${last.cta}`]):toast("Export","Rien à exporter")'
New-AppPage "Parlios Constructeur d’Offres" $OB_CTL $OB_JS "Assemblez une offre claire et convaincante." "Produit: Coaching IA • Audience: Freelances designers → Construire puis Export MD." "offer-builder"

# Market Genius
$MG_CTL = '<label>Objectif</label><select id="goal"><option>Trafic</option><option>Leads</option><option>Ventes</option><option>Notoriété</option></select><label>Canal</label><select id="channel"><option>Instagram</option><option>LinkedIn</option><option>Email</option><option>Landing page</option></select><label>Ton</label><select id="tone"><option>pro</option><option>friendly</option><option>fun</option><option>direct</option></select><div class="row"><button id="ideas" class="primary">Générer 5 idées</button><button id="csv" class="ghost">CSV</button></div>'
$MG_JS  = 'import {variants} from "../../lib/mock_ai.js";import {exportCSV} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Idées</label><div id=out class=output></div>";let last=[];ideas.onclick=()=>{last=variants({seed:Date.now(),tone:tone.value,count:5});out.textContent=last.map((v,i)=>`- ${v}`).join("\n");toast("Idées prêtes","5 propositions")};csv.onclick=()=>last.length?exportCSV("parlios-market-genius.csv",[["Index","Idée"]].concat(last.map((x,i)=>[i+1,x]))):toast("Export","Rien à exporter")'
New-AppPage "Parlios Génie du Marché" $MG_CTL $MG_JS "Générez des idées multi-canaux calibrées par ton et objectif." "Objectif: Leads • Canal: LinkedIn • Ton: pro → Générer puis Export CSV." "market-genius"

# Site Preview
$SP_CTL = '<label>Nom de l’entreprise</label><input id="brand" placeholder="Ex: Parlios Studio"/><label>Secteur</label><select id="industry"><option>Photographe</option><option>Restaurant</option><option>Coach</option><option>Portfolio</option><option>Agence</option></select><label>CTA</label><select id="cta"><option>Voir mon portfolio</option><option>Réserver une séance</option><option>Réserver une table</option><option>Nous contacter</option></select><label>Couleur principale</label><input id="color" type="color" value="#9EE37D"/><label>Logo (PNG/SVG ≤ 2 Mo)</label><input id="logo" type="file" accept=".png,.svg"/><div class="row"><button id="build" class="primary">Générer l’aperçu</button><button id="html" class="ghost">Télécharger HTML</button></div>'
$SP_JS  = 'import {exportHTML} from "../../lib/exporters.js";const R=document.getElementById("right");R.innerHTML="<label>Aperçu</label><iframe id=frame title=Preview style=\\"width:100%;height:460px;border:1px solid var(--border);border-radius:16px;background:#0A0F16\\"></iframe>";const frame=document.getElementById("frame");let last="";function sanitize(t){return String(t||"").replace(/[<>]/g,"")}function tpl({brand,industry,cta,color,logoData}){const a=color||"#9EE37D";const logoTag=logoData?`<img src='${logoData}' alt='${sanitize(brand)} logo' style='height:42px;border-radius:6px'/>`:`<div aria-hidden='true' style='width:42px;height:42px;border-radius:10px;background:${a}'></div>`;return `<!doctype html><html lang='fr'><meta charset='utf-8'/><meta name='viewport' content='width=device-width, initial-scale=1'/><title>${sanitize(brand)} — Aperçu</title><style>:root{--bg:#07090F;--t:#F3F7FF;--s:#B8C2D9;--b:rgba(255,255,255,.14);--a:${a}}*{box-sizing:border-box}body{margin:0;background:radial-gradient(800px 600px at -10% -10%, rgba(255,107,107,.12), transparent 60%),radial-gradient(800px 600px at 110% 110%, rgba(127,212,255,.12), transparent 60%),#07090F;color:var(--t);font:15px/1.55 Inter} .wrap{max-width:1000px;margin:0 auto;padding:24px}header{display:flex;align-items:center;justify-content:space-between;padding:12px 0;border-bottom:1px solid var(--b)}.hero{display:grid;grid-template-columns:1.2fr .8fr;gap:20px;align-items:center;padding:24px 0}h1{font-size:28px;margin:12px 0}.lead{color:var(--s)}button.primary{background:linear-gradient(90deg,var(--a),#7FD4FF);color:#06101A;border:0;border-radius:12px;padding:12px 16px;font-weight:800;cursor:pointer}.card{background:rgba(255,255,255,.05);border:1px solid var(--b);border-radius:16px;padding:16px}</style><body><div class='wrap'><header><div style='display:flex;gap:12px;align-items:center'>${logoTag}<strong>${sanitize(brand)}</strong></div><nav aria-label=nav><a href='#services' style='color:var(--s);margin-right:12px'>Services</a><a href='#contact' style='color:var(--s)'>Contact</a></nav></header><section class='hero'><div><h1>${sanitize(brand)} — ${sanitize(industry)}</h1><p class='lead'>Une expérience ${industry.toLowerCase()} pensée pour convertir, accessible et performante.</p><button class='primary' aria-label='${sanitize(cta)}'>${sanitize(cta)}</button></div><div class='card'><h3 id='services'>Points forts</h3><ul><li>Design cohérent, contrastes AA</li><li>Rapidité de chargement</li><li>Structure claire et CTA visible</li></ul></div></section><footer id='contact' style='color:var(--s);margin-top:16px'>© ${(Get-Date).Year} ${sanitize(brand)} — Aperçu offline</footer></div></body>`}async function fileToDataURL(f){return await new Promise((res,rej)=>{const r=new FileReader();r.onload=()=>res(r.result);r.onerror=rej;r.readAsDataURL(f)})}build.onclick=async()=>{const brand=brand.value||"Ma Marque";const industry=industry.value;const cta=cta.value;const color=color.value;const file=logo.files[0];let logoData="";if(file&&file.size<=2*1024*1024&&/(png|svg)$/i.test(file.name))logoData=await fileToDataURL(file);last=tpl({brand,industry,cta,color,logoData});const d=frame.contentWindow.document;d.open();d.write(last);d.close();toast("Aperçu généré","Export HTML disponible")};html.onclick=()=>last?exportHTML("parlios-site-preview.html",last):toast("Export","Générez d’abord l’aperçu")'
New-AppPage "Parlios Créateur de Site" $SP_CTL $SP_JS "Générez un mini site d’aperçu avec logo, couleur et CTA." "Nom: Parlios Studio • Secteur: Photographe • CTA: Réserver une séance → Générer puis Télécharger HTML." "site-preview-builder"

# --- README + CHANGELOG ---
Write-Utf8 "$Root/README_DROP.md"  ("# Parlios — TestPack (Neon UI, Offline)`n7 apps, guides intégrés, exports locaux.`nVersion: $today`n")
Write-Utf8 "$Root/CHANGELOG.md"    ("- $today Livraison TestPack néon (7 apps + guides + brand).`n")

# --- ZIP ---
Compress-Archive -Path "$Root\*" -DestinationPath "$Zip" -Force
Write-Host "OK -> $Zip"
