
diff --git a/.github/agents/UA_FULL_BOOTSTRAP.yaml b/.github/agents/UA_FULL_BOOTSTRAP.yaml
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.github/agents/UA_FULL_BOOTSTRAP.yaml
@@
+# ================================================================
+# üß† UA_FULL_BOOTSTRAP.yaml
+# Mode Agent ‚Äî Orchestrateur GitHub-First
+# Objectif : initialiser et finaliser automatiquement le bootstrap UA
+# ================================================================
+
+meta:
+  name: "UA Full Bootstrap"
+  version: "v1.0.0"
+  description: >
+    Initialise l‚Äôenvironnement complet CI/QA/SupplyChain du d√©p√¥t UA,
+    applique le patch bootstrap, ouvre la PR consolid√©e, et pr√©pare la release pr√©-prod.
+  maintainer: "Ultimate Agent (autonomous mode)"
+  created_at: "2025-10-15T00:00:00Z"
+
+inputs:
+  repo: "Minot-Prod/UA"
+  branch: "feat/ua-bootstrap"
+  version: "v0.1.0"
+  author: "Ultimate Agent (autonomous mode)"
+  dry_run: false
+
+steps:
+  - name: "üîπ Handshake GitHub"
+    run: |
+      echo "ü§ù Checking GitHub access for ${{ inputs.repo }}..."
+      gh repo view ${{ inputs.repo }} >/dev/null && echo "‚úÖ Access confirmed."
+
+  - name: "üß© Apply Patch"
+    if: "!${{ inputs.dry_run }}"
+    run: |
+      echo "üì¶ Applying ua-bootstrap.diff..."
+      if [ ! -f ua-bootstrap.diff ]; then
+        echo "‚ùå Missing patch file ua-bootstrap.diff."
+        exit 1
+      fi
+      git fetch origin main
+      git checkout -b "${{ inputs.branch }}" origin/main
+      git apply ua-bootstrap.diff
+      git add .
+      git commit -m "chore(bootstrap): UA environment initialization"
+
+  - name: "üöÄ Push Branch"
+    if: "!${{ inputs.dry_run }}"
+    run: |
+      git push origin "${{ inputs.branch }}"
+
+  - name: "üì§ Create Pull Request"
+    if: "!${{ inputs.dry_run }}"
+    run: |
+      gh pr create +        --title "chore(bootstrap): UA environment initialization" +        --body "Initial CI/QA/SupplyChain setup by Ultimate Agent (autonomous mode).  
+Includes Dependabot, Lighthouse, QA report, and v0.1.0 changelog." +        --base main +        --head "${{ inputs.branch }}" +        --label "ci,qa,supplychain,autonomous"
+
+  - name: "üè∑Ô∏è Create Draft Release"
+    if: "!${{ inputs.dry_run }}"
+    run: |
+      git tag -a "${{ inputs.version }}" -m "${{ inputs.version }} ‚Äì Pre-Prod Bootstrap"
+      git push origin "${{ inputs.version }}"
+      gh release create "${{ inputs.version }}" +        --draft +        --title "${{ inputs.version }} ‚Äì Pre-Prod Bootstrap" +        --notes "Initial environment setup including CI/QA pipelines, Dependabot, and Lighthouse configuration.  
+‚úÖ Handshake complete ‚Äî UA operational autonomy confirmed."
+
+  - name: "üìä Generate Report"
+    run: |
+      echo "{
+        \"repo\": \"${{ inputs.repo }}\",
+        \"branch\": \"${{ inputs.branch }}\",
+        \"version\": \"${{ inputs.version }}\",
+        \"status\": \"completed\",
+        \"timestamp\": \"$(date -Iseconds)\",
+        \"go\": true,
+        \"fix\": false,
+        \"actions\": [\"patch_applied\", \"branch_pushed\", \"pr_created\", \"release_drafted\"]
+      }" > UA_BOOTSTRAP_REPORT.json
+      echo "‚úÖ UA Bootstrap completed."
+
+outputs:
+  - path: "UA_BOOTSTRAP_REPORT.json"
+    description: "Rapport complet du bootstrap UA (KPIs + artefacts)"
+
diff --git a/.github/workflows/run-ua-agent.yml b/.github/workflows/run-ua-agent.yml
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/.github/workflows/run-ua-agent.yml
@@
+name: "üß† UA Agent Runner"
+on:
+  workflow_dispatch:
+    inputs:
+      dry_run:
+        description: "Simuler sans pousser les changements ?"
+        required: false
+        default: "false"
+      branch:
+        description: "Nom de la branche bootstrap"
+        required: false
+        default: "feat/ua-bootstrap"
+      version:
+        description: "Version de release"
+        required: false
+        default: "v0.1.0"
+
+permissions:
+  contents: write
+  pull-requests: write
+
+jobs:
+  ua-bootstrap:
+    name: "UA Full Bootstrap Execution"
+    runs-on: ubuntu-latest
+
+    steps:
+      - name: "üì• Checkout repository"
+        uses: actions/checkout@v4
+        with:
+          fetch-depth: 0
+
+      - name: "‚öôÔ∏è Setup environment"
+        run: |
+          sudo apt-get update -y
+          sudo apt-get install -y git jq
+          echo "‚úÖ Git & jq installed."
+
+      - name: "üîê Configure GitHub CLI"
+        env:
+          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+        run: |
+          echo "Authenticating gh CLI..."
+          gh auth setup-git
+          gh auth status
+
+      - name: "üß† Run UA Full Bootstrap Agent"
+        env:
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+          DRY_RUN: ${{ github.event.inputs.dry_run }}
+          BRANCH: ${{ github.event.inputs.branch }}
+          VERSION: ${{ github.event.inputs.version }}
+        run: |
+          echo "üöÄ Launching UA Full Bootstrap Agent..."
+          bash .github/agents/UA_FULL_BOOTSTRAP.yaml || exit 1
+
+      - name: "üìä Archive UA Report"
+        if: always()
+        run: |
+          if [ -f UA_BOOTSTRAP_REPORT.json ]; then
+            echo "UA Bootstrap completed. Summary:"
+            cat UA_BOOTSTRAP_REPORT.json
+          else
+            echo "‚ö†Ô∏è Aucun rapport UA g√©n√©r√©."
+          fi
+
+      - name: "üóÉÔ∏è Upload Report Artifact"
+        if: always()
+        uses: actions/upload-artifact@v4
+        with:
+          name: UA_BOOTSTRAP_REPORT
+          path: UA_BOOTSTRAP_REPORT.json
